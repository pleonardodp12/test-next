{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/leonardo/Documentos/test-next/src/components/Calculator/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport styles from './Calculator.module.scss';\n\nvar Calculator = function Calculator() {\n  _s();\n\n  var _useState = useState(0),\n      altura = _useState[0],\n      setAltura = _useState[1];\n\n  var _useState2 = useState(0),\n      peso = _useState2[0],\n      setPeso = _useState2[1];\n\n  var _useState3 = useState(),\n      imc = _useState3[0],\n      setImc = _useState3[1];\n\n  var calculateImc = function calculateImc() {\n    var alturam = altura / 100;\n    setImc((peso / (alturam * alturam)).toFixed(2));\n  };\n\n  var verifyImc = function verifyImc() {\n    if (imc < 18.5) return \"Abaixo do peso\";\n    if (imc < 24.9) return \"Peso normal\";\n    if (imc < 29.9) return \"Sobrepeso\";\n    if (imc < 34.9) return \"Obesidade grau 1\";\n  };\n\n  return __jsx(\"div\", {\n    className: styles.calculator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    maxWidth: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Calculadora\"), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Altura em cm\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: altura,\n    onChange: function onChange(_ref) {\n      var target = _ref.target;\n      return setAltura(target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Peso em kg\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: peso,\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return setPeso(target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: function onClick() {\n      return calculateImc();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Calcular\")), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"O seu IMC \\xE9: \", imc, \" kg/m\\xB2\")))));\n};\n\n_s(Calculator, \"Snj5Kyg30/inE1BnLv9bjSLfQuU=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/home/leonardo/Documentos/test-next/src/components/Calculator/index.js"],"names":["Container","Grid","Typography","TextField","Button","useState","styles","Calculator","altura","setAltura","peso","setPeso","imc","setImc","calculateImc","alturam","toFixed","verifyImc","calculator","target","value"],"mappings":"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","sourcesContent":["import { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport styles from './Calculator.module.scss';\n\nconst Calculator = () => {\n\n  const [altura, setAltura] = useState(0)\n  const [peso, setPeso] = useState(0)\n  const [imc, setImc] = useState()\n\n  const calculateImc = () => {\n    const alturam = altura/100\n    setImc((peso/(alturam*alturam)).toFixed(2))\n  }\n\n  const verifyImc = () => {\n    if (imc < 18.5) return \"Abaixo do peso\"\n    if (imc < 24.9) return \"Peso normal\"\n    if (imc < 29.9) return \"Sobrepeso\"\n    if (imc < 34.9) return \"Obesidade grau 1\"\n  }\n\n  return (\n    <div className={styles.calculator}>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h3\">Calculadora</Typography>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <TextField\n              label=\"Altura em cm\"\n              variant=\"filled\"\n              fullWidth\n              type=\"number\"\n              value={altura}\n              onChange={({ target }) => setAltura(target.value)}\n              />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              label=\"Peso em kg\"\n              variant=\"filled\"\n              fullWidth\n              type=\"number\"\n              value={peso}\n              onChange={({ target }) => setPeso(target.value)}\n            />\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              onClick={() => calculateImc()}\n            >\n              Calcular\n            </Button>\n          </Grid>\n\n          <Grid item>\n            <Typography>O seu IMC é: {imc} kg/m²</Typography>\n          </Grid>\n        </Grid>\n      </Container>\n      \n    </div>\n  );\n};\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}